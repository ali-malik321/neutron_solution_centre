{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_POSTS, GET_THREE_POSTS, GET_TWO_POSTS, GET_POST, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, ADD_COMMENT, REMOVE_COMMENT } from './types'; // Get posts\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts');\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add like\n\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Remove like\n\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data\n      }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete post\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch(setAlert('Post removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add post\n\nexport const addPost = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n    dispatch(setAlert('Post created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get two post\n\nexport const getTwoPost = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts/footer');\n    dispatch({\n      type: GET_TWO_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get three post\n\nexport const getThreePost = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/posts/latest');\n    dispatch({\n      type: GET_THREE_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response.status\n      }\n    });\n  }\n}; // Get post\n\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Add comment\n\nexport const addComment = (postId, formData) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await axios.post(`/api/posts/comment/${postId}`, formData, config);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete comment\n\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n    dispatch(setAlert('Comment removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/ali/neutron_solution_centre/src/actions/post.js"],"names":["axios","setAlert","GET_POSTS","GET_THREE_POSTS","GET_TWO_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","config","headers","post","getTwoPost","getThreePost","getPost","addComment","postId","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n\tGET_POSTS,\n\tGET_THREE_POSTS,\n\tGET_TWO_POSTS,\n\tGET_POST,\n\tPOST_ERROR,\n\tUPDATE_LIKES,\n\tDELETE_POST,\n\tADD_POST,\n\tADD_COMMENT,\n\tREMOVE_COMMENT,\n} from './types';\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get('/api/posts');\n\t\tdispatch({\n\t\t\ttype: GET_POSTS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.put(`/api/posts/like/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: { id, likes: res.data },\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.put(`/api/posts/unlike/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: UPDATE_LIKES,\n\t\t\tpayload: { id, likes: res.data },\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n\ttry {\n\t\tawait axios.delete(`/api/posts/${id}`);\n\n\t\tdispatch({\n\t\t\ttype: DELETE_POST,\n\t\t\tpayload: id,\n\t\t});\n\t\tdispatch(setAlert('Post removed', 'success'));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t};\n\n\ttry {\n\t\tconst res = await axios.post('/api/posts/', formData, config);\n\n\t\tdispatch({\n\t\t\ttype: ADD_POST,\n\t\t\tpayload: res.data,\n\t\t});\n\t\tdispatch(setAlert('Post created', 'success'));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Get two post\nexport const getTwoPost = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get('/api/posts/footer');\n\t\tdispatch({\n\t\t\ttype: GET_TWO_POSTS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Get three post\nexport const getThreePost = () => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get('/api/posts/latest');\n\t\tdispatch({\n\t\t\ttype: GET_THREE_POSTS,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Get post\nexport const getPost = (id) => async (dispatch) => {\n\ttry {\n\t\tconst res = await axios.get(`/api/posts/${id}`);\n\t\tdispatch({\n\t\t\ttype: GET_POST,\n\t\t\tpayload: res.data,\n\t\t});\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t};\n\n\ttry {\n\t\tconst res = await axios.post(\n\t\t\t`/api/posts/comment/${postId}`,\n\t\t\tformData,\n\t\t\tconfig,\n\t\t);\n\t\tdispatch({\n\t\t\ttype: ADD_COMMENT,\n\t\t\tpayload: res.data,\n\t\t});\n\n\t\tdispatch(setAlert('Comment Added', 'success'));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n\ttry {\n\t\tawait axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n\t\tdispatch({\n\t\t\ttype: REMOVE_COMMENT,\n\t\t\tpayload: commentId,\n\t\t});\n\t\tdispatch(setAlert('Comment removed', 'success'));\n\t} catch (err) {\n\t\tdispatch({\n\t\t\ttype: POST_ERROR,\n\t\t\tpayload: { msg: err.response.statusText, status: err.response.status },\n\t\t});\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}