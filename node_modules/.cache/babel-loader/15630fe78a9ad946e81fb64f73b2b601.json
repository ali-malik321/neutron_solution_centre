{"ast":null,"code":"var _jsxFileName = \"/home/ali/neutron_solution_centre/src/components/layout/Success.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authenticateUser } from '../../actions/auth';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Success = ({\n  auth,\n  authenticateUser,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    authenticateUser(match.params.token);\n    localStorage.setItem('token', match.params.token);\n  }, [authenticateUser]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: (() => {\n      if (auth.loading === false & auth.user !== null) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this);\n      }\n    })()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Success, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Success;\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nSuccess.propTypes = {\n  auth: PropTypes.object.isRequired,\n  authenticateUser: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, {\n  authenticateUser\n})(Success);\n\nvar _c;\n\n$RefreshReg$(_c, \"Success\");","map":{"version":3,"sources":["/home/ali/neutron_solution_centre/src/components/layout/Success.js"],"names":["React","useEffect","Fragment","PropTypes","Redirect","connect","authenticateUser","Spinner","Success","auth","match","params","token","localStorage","setItem","loading","user","mapStateToProps","state","propTypes","object","isRequired","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQH,EAAAA,gBAAR;AAA0BI,EAAAA;AAA1B,CAAD,KAAuC;AAAA;;AACtDT,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,KAAK,CAACC,MAAN,CAAaC,KAA3C;AACA,GAHQ,EAGN,CAACN,gBAAD,CAHM,CAAT;AAIA,sBACC,QAAC,QAAD;AAAA,cACE,CAAC,MAAM;AACP,UAAKG,IAAI,CAACM,OAAL,KAAiB,KAAlB,GAA4BN,IAAI,CAACO,IAAL,KAAc,IAA9C,EAAqD;AACpD,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAFD,MAEO;AACN,4BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;AACD,KANA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAhBD;;GAAMR,O;;KAAAA,O;;AAkBN,MAAMS,eAAe,GAAIC,KAAD,KAAY;AACnCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADuB,CAAZ,CAAxB;;AAIAD,OAAO,CAACW,SAAR,GAAoB;AACnBV,EAAAA,IAAI,EAAEN,SAAS,CAACiB,MAAV,CAAiBC,UADJ;AAEnBf,EAAAA,gBAAgB,EAAEH,SAAS,CAACmB,IAAV,CAAeD;AAFd,CAApB;AAKA,eAAehB,OAAO,CAACY,eAAD,EAAkB;AACvCX,EAAAA;AADuC,CAAlB,CAAP,CAEZE,OAFY,CAAf","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authenticateUser } from '../../actions/auth';\nimport Spinner from './Spinner';\n\nconst Success = ({ auth, authenticateUser, match }) => {\n\tuseEffect(() => {\n\t\tauthenticateUser(match.params.token);\n\t\tlocalStorage.setItem('token', match.params.token);\n\t}, [authenticateUser]);\n\treturn (\n\t\t<Fragment>\n\t\t\t{(() => {\n\t\t\t\tif ((auth.loading === false) & (auth.user !== null)) {\n\t\t\t\t\treturn <Redirect to=\"/\" />;\n\t\t\t\t} else {\n\t\t\t\t\treturn <Spinner />;\n\t\t\t\t}\n\t\t\t})()}\n\t\t</Fragment>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tauth: state.auth,\n});\n\nSuccess.propTypes = {\n\tauth: PropTypes.object.isRequired,\n\tauthenticateUser: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, {\n\tauthenticateUser,\n})(Success);\n"]},"metadata":{},"sourceType":"module"}