{"ast":null,"code":"var _jsxFileName = \"/home/ali/neutron_solution_centre/src/components/auth/ForgotUserPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotUserPassword = ({\n  setAlert,\n  auth\n}) => {\n  _s();\n\n  const [showSignUp, setShowSignUp] = useState(true);\n  const [verificationSent, setVerificationSent] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  const onChange = e => {\n    setEmail(e.target.value);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post(\"/api/auth/forgot\", {\n        email\n      });\n      setVerificationSent(true);\n      setAlert(\"Account reset link has been sent to your email\", \"success\", 10000);\n      setEmail(\"\");\n    } catch (err) {\n      setAlert(\"Invalid credentials\", \"danger\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: showSignUp === false || verificationSent === true || auth.isAuthenticated ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"px-1\",\n      centered: true,\n      show: showSignUp,\n      onHide: () => {\n        setShowSignUp(!showSignUp);\n      },\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mod-header\",\n            children: \"Forgot your password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-form-warp px-2\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"contact-form\",\n          onSubmit: e => {\n            onSubmit(e);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-12 col-md-12 \",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-box\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => onChange(e),\n                  type: \"email\",\n                  value: email,\n                  name: \"email\",\n                  placeholder: \"Enter your email...\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center \",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-button col-12\",\n              type: \"submit\",\n              children: \"Send Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"modal-para\",\n              children: [\"Remembered my password\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"modal-link\",\n                  children: \"Sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotUserPassword, \"Rsnq17Y5/S3PlUoK+CbxA+ctgXE=\");\n\n_c = ForgotUserPassword;\nForgotUserPassword.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  setAlert\n})(ForgotUserPassword);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotUserPassword\");","map":{"version":3,"sources":["/home/ali/neutron_solution_centre/src/components/auth/ForgotUserPassword.js"],"names":["React","useState","Fragment","PropTypes","axios","Modal","Link","Redirect","setAlert","connect","ForgotUserPassword","auth","showSignUp","setShowSignUp","verificationSent","setVerificationSent","email","setEmail","onChange","e","target","value","onSubmit","preventDefault","post","err","isAuthenticated","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { Modal } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\nimport { connect } from \"react-redux\";\n\nconst ForgotUserPassword = ({ setAlert, auth }) => {\n  const [showSignUp, setShowSignUp] = useState(true);\n  const [verificationSent, setVerificationSent] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const onChange = e => {\n    setEmail(e.target.value);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      await axios.post(\"/api/auth/forgot\", {\n        email\n      });\n      setVerificationSent(true);\n      setAlert(\n        \"Account reset link has been sent to your email\",\n        \"success\",\n        10000\n      );\n      setEmail(\"\");\n    } catch (err) {\n      setAlert(\"Invalid credentials\", \"danger\");\n    }\n  };\n  return (\n    <Fragment>\n      {showSignUp === false ||\n      verificationSent === true ||\n      auth.isAuthenticated ? (\n        <Redirect to=\"/\" />\n      ) : (\n        <Modal\n          className=\"px-1\"\n          centered\n          show={showSignUp}\n          onHide={() => {\n            setShowSignUp(!showSignUp);\n          }}\n          aria-labelledby=\"contained-modal-title-vcenter\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              <span className=\"mod-header\">Forgot your password?</span>\n            </Modal.Title>\n          </Modal.Header>\n          <div className=\"contact-form-warp px-2\">\n            <form\n              id=\"contact-form\"\n              onSubmit={e => {\n                onSubmit(e);\n              }}\n            >\n              <div className=\"row\">\n                <div className=\"col-lg-12 col-md-12 \">\n                  <div className=\"input-box\">\n                    <input\n                      onChange={e => onChange(e)}\n                      type=\"email\"\n                      value={email}\n                      name=\"email\"\n                      placeholder=\"Enter your email...\"\n                      required\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"text-center \">\n                <button className=\"submit-button col-12\" type=\"submit\">\n                  Send Email\n                </button>\n\n                <p className=\"modal-para\">\n                  Remembered my password{\" \"}\n                  <Link to=\"/login\">\n                    <span className=\"modal-link\">Sign in</span>\n                  </Link>\n                </p>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nForgotUserPassword.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { setAlert })(ForgotUserPassword);\n"]},"metadata":{},"sourceType":"module"}